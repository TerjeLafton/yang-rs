module system {
    prefix "sys";
    namespace "org.system";
    yang-version 1.1;

    organization "System Organization";
    contact "test@system.org";
    description "System module";
    reference "See system.com";

notification interface-state-change {
  if-feature interface-notifications;
  status current;
  description "Generated when an interface changes state";
  reference "Interface Management Notification Framework v1.2";

  typedef state-change-reason {
    type enumeration {
      enum admin-change;
      enum link-failure;
      enum protocol-failure;
      enum remote-failure;
      enum unknown;
    }
    description "Reason for the interface state change";
  }

  grouping common-state-fields {
    leaf timestamp {
      type yang:date-and-time;
      description "Time when the state change occurred";
    }

    leaf admin-status-change {
      type boolean;
      description "True if administrative status changed";
    }
  }

  leaf interface-name {
    type string;
    description "Name of the interface that changed state";
  }

  leaf previous-state {
    type enumeration {
      enum up;
      enum down;
      enum testing;
      enum unknown;
    }
    description "Previous operational state of the interface";
  }

  leaf current-state {
    type enumeration {
      enum up;
      enum down;
      enum testing;
      enum unknown;
    }
    description "New operational state of the interface";
  }

  leaf reason {
    type state-change-reason;
    description "Reason for the state change";
  }

  uses common-state-fields;

  container counters {
    description "Interface counters at the time of state change";

    leaf flap-count {
      type uint32;
      description "Number of state changes in the last hour";
    }

    leaf uptime {
      type uint32;
      units "seconds";
      description "Time since the last state change";
    }
  }
}
}
